//const a = [4, 6, 5, 3, 1, 3]
//const a = [1, 1, 2, 2, 4, 4, 5, 5, 5]
//const a = [1, 2, 2, 3, 1, 2]
//const a = [4, 2, 3, 4, 4, 9, 98, 98, 3, 3, 3, 4, 2, 98, 1, 98, 98, 1, 1, 4, 98, 2, 98, 3, 9, 9, 3, 1, 4, 1, 98, 9, 9, 2, 9, 4, 2, 2, 9, 98, 4, 98, 1, 3, 4, 9, 1, 98, 98, 4, 2, 3, 98, 98, 1, 99, 9, 98, 98, 3, 98, 98, 4, 98, 2, 98, 4, 2, 1, 1, 9, 2, 4]
//const a = [66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66, 66]
const a = [4, 97, 5, 97, 97, 4, 97, 4, 97, 97, 97, 97, 4, 4, 5, 5, 97, 5, 97, 99, 4, 97, 5, 97, 97, 97, 5, 5, 97, 4, 5, 97, 97, 5, 97, 4, 97, 5, 4, 4, 97, 5, 5, 5, 4, 97, 97, 4, 97, 5, 4, 4, 97, 97, 97, 5, 5, 97, 4, 97, 97, 5, 4, 97, 97, 4, 97, 97, 97, 5, 4, 4, 97, 4, 4, 97, 5, 97, 97, 97, 97, 4, 97, 5, 97, 5, 4, 97, 4, 5, 97, 97, 5, 97, 5, 97, 5, 97, 97, 97]
const n = a.length

const pickingNumbers = (a) => {
    const count = a.reduce((map, val) => { map[val] = (map[val] || 0) + 1; return map }, {})
    const keys = Object.keys(count)
    let numberHighest = count[Object.keys(count).reduce((a, b) => count[a] > count[b] ? a : b)]

    if (keys.length === 1) {
        return count[keys]
    }

    for (let i = 0; i < keys.length; i++) {

        if (Math.abs(keys[i] - keys[i + 1]) === 1) {
            let sum = count[keys[i]] + count[keys[i + 1]]

            if (numberHighest < sum) {
                numberHighest = sum
            }
        }
    }

    return numberHighest

}

let result = pickingNumbers(a)
console.log(result);